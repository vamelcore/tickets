version: "3.7"

networks:
  local:
    driver: bridge

volumes:
  dbData:
    driver: local
  cacheData:
      driver: local

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
    ports:
      - 3306:3306
    volumes:
      - dbData:/var/lib/mysql/
    networks:
      - local

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    depends_on:
        - mysql
    volumes:
      - cacheData:/data

  app:
    build:
      args:
        user: ${DOCKER_USER}
        uid: ${DOCKER_UID}
      context: ./docker/
      dockerfile: app.Dockerfile
    image: app:laravel
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - mysql
    volumes:
      - ./:/var/www
    networks:
      - local

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - mysql
      - app
    ports:
      - 8080:80
    volumes:
      - ./:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - local
    command: "/bin/sh -c 'trap exit TERM; while :; do nginx -s reload; sleep 24h & wait $${!}; done & exec nginx -g \"daemon off;\"'"

  supervisor:
    build:
      args:
        user: ${DOCKER_USER}
        uid: ${DOCKER_UID}
      context: ./docker/
      dockerfile: supervisor.Dockerfile
    image: ubuntu:supervisor
    container_name: sepervisor
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - app
    volumes:
      - ./:/var/www
      - ./docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - local
